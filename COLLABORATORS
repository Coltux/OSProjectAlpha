>Dr. Christian Grant, https://oudalab.github.io/cs5113fa19/projects/project1phase1, provided the foundation for the Dockerfile in the first project. Provided the config.ini and the network-generator.yml 
https://github.com/grpc/grpc/tree/master/examples/python/helloworld, provided an example of a python GRPC program that helped me figure out the framework it specifically helped me figure out how to start a GRPC python file for both the server and client
https://www.freecodecamp.org/news/a-beginners-guide-to-docker-how-to-create-a-client-server-side-with-docker-compose-12c8cf0ae0aa/, Provided an example of a Docker-Compose project using python for me to figure out Docker-Compose and how it works with Python it specifically helped debug a lot of networking problems I ran into
https://www.semantics3.com/blog/a-simplified-guide-to-grpc-in-python-6c4e25f0c506/, Helped me figure out how to retrieve the data that was being passed to the server by the client within the server.py
https://github.com/grpc/grpc/issues/19514 The comment by yutkin on Sep 16 helped me understand how to implement an interceptor for GRPC.
https://github.com/francesco-bongiovanni/Distributed-Graph-Algorithms/tree/master/Minimum-Spanning-Tree Provided some examples of how to get started and how the aglorithm looks, however he used an entirely different system than grpc and docker-compose so it was really only a conceptual help. 
